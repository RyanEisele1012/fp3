{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostDetails.css'; // Import the CSS file\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const [username, setUsername] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    // Fetch comments data from the post object\n    const fetchComments = async () => {\n      try {\n        if (!post || !post.comments || !Array.isArray(post.comments)) return; // Add null and array checks\n\n        const postComments = post.comments;\n        setComments(postComments);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n      }\n    };\n    fetchComments();\n  }, [post]); // Update comments when post object changes\n\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    setSubmitting(true);\n    try {\n      // Add the new comment to the database\n      const {\n        data,\n        error\n      } = await supabase.from('Comments').insert([{\n        post_id: post.id,\n        content: newComment,\n        username: username || 'Anonymous'\n      }]);\n      if (error) {\n        throw error;\n      }\n\n      // Update the local state with the new comment\n      setComments([...comments, data[0]]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this); // Display loading state while fetching data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", post.created_at]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments && comments.map((comment, index) =>\n      /*#__PURE__*/\n      // Add null check\n      _jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", comment.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write your comment here...\",\n        disabled: submitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Enter your username\",\n        disabled: submitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !newComment.trim() || submitting,\n        children: submitting ? 'Submitting...' : 'Submit Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetails, \"yPp7ZVg+QNoJknGhAjBmdeRCFsY=\");\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","PostDetails","post","_s","comments","setComments","loading","setLoading","newComment","setNewComment","username","setUsername","submitting","setSubmitting","fetchComments","Array","isArray","postComments","error","console","message","handleSubmitComment","e","preventDefault","trim","data","from","insert","post_id","id","content","children","fileName","_jsxFileName","lineNumber","columnNumber","title","upvotes","imageUrl","src","alt","created_at","map","comment","index","onSubmit","value","onChange","target","placeholder","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostDetails.css'; // Import the CSS file\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst PostDetails = ({ post }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Fetch comments data from the post object\r\n        const fetchComments = async () => {\r\n            try {\r\n                if (!post || !post.comments || !Array.isArray(post.comments)) return; // Add null and array checks\r\n\r\n                const postComments = post.comments;\r\n                setComments(postComments);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, [post]); // Update comments when post object changes\r\n\r\n    const handleSubmitComment = async (e) => {\r\n        e.preventDefault();\r\n        if (!newComment.trim()) return;\r\n        \r\n        setSubmitting(true);\r\n        \r\n        try {\r\n            // Add the new comment to the database\r\n            const { data, error } = await supabase.from('Comments').insert([\r\n                { post_id: post.id, content: newComment, username: username || 'Anonymous' }\r\n            ]);\r\n\r\n            if (error) {\r\n                throw error;\r\n            }\r\n\r\n            // Update the local state with the new comment\r\n            setComments([...comments, data[0]]);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error.message);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading comments...</div>; // Display loading state while fetching data\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Post Details</h2>\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>User Name: {post.username}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p>Created At: {post.created_at}</p>\r\n            <h3>Comments</h3>\r\n            <ul>\r\n                {comments && comments.map((comment, index) => ( // Add null check\r\n                    <li key={index}>\r\n                        <p>User: {comment.username}</p>\r\n                        <p>Content: {comment.content}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <form onSubmit={handleSubmitComment}>\r\n                <textarea\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Write your comment here...\"\r\n                    disabled={submitting}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Enter your username\"\r\n                    disabled={submitting}\r\n                />\r\n                <button type=\"submit\" disabled={!newComment.trim() || submitting}>\r\n                    {submitting ? 'Submitting...' : 'Submit Comment'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
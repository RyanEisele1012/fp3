{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = 'https://jvrjqxrxfuarjjvcxcdl.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2cmpxeHJ4ZnVhcmpqdmN4Y2RsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTI3NTg1NjEsImV4cCI6MjAyODMzNDU2MX0.rN2WF0-YyS1BoxdJANOb-UiXG0ez50ku5Vj4d42b_IM';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Function to add a new comment to a post\nconst addCommentToPost = async (postId, comment) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').update({\n      comments: supabase.sql(`array_append(comments, ${comment})`)\n    }).eq('id', postId);\n    if (error) {\n      throw error;\n    }\n    return data;\n  } catch (error) {\n    console.error('Error adding comment:', error.message);\n    throw error;\n  }\n};\n\n// Function to fetch comments for a specific post\nconst fetchCommentsForPost = async postId => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').select('comments').eq('id', postId).single();\n    if (error) {\n      throw error;\n    }\n    return data.comments || [];\n  } catch (error) {\n    console.error('Error fetching comments:', error.message);\n    throw error;\n  }\n};\nexport { supabase, addCommentToPost, fetchCommentsForPost };","map":{"version":3,"names":["createClient","supabaseUrl","supabaseAnonKey","supabase","addCommentToPost","postId","comment","data","error","from","update","comments","sql","eq","console","message","fetchCommentsForPost","select","single"],"sources":["C:/Users/ryegu/Documents/COP4808/src/client.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://jvrjqxrxfuarjjvcxcdl.supabase.co';\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2cmpxeHJ4ZnVhcmpqdmN4Y2RsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTI3NTg1NjEsImV4cCI6MjAyODMzNDU2MX0.rN2WF0-YyS1BoxdJANOb-UiXG0ez50ku5Vj4d42b_IM';\r\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\n// Function to add a new comment to a post\r\nconst addCommentToPost = async (postId, comment) => {\r\n    try {\r\n        const { data, error } = await supabase\r\n            .from('Posts')\r\n            .update({ comments: supabase.sql(`array_append(comments, ${comment})`) })\r\n            .eq('id', postId);\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error adding comment:', error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to fetch comments for a specific post\r\nconst fetchCommentsForPost = async (postId) => {\r\n    try {\r\n        const { data, error } = await supabase\r\n            .from('Posts')\r\n            .select('comments')\r\n            .eq('id', postId)\r\n            .single();\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        return data.comments || [];\r\n    } catch (error) {\r\n        console.error('Error fetching comments:', error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport { supabase, addCommentToPost, fetchCommentsForPost };\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,eAAe,GAAG,kNAAkN;AAC1O,MAAMC,QAAQ,GAAGH,YAAY,CAACC,WAAW,EAAEC,eAAe,CAAC;;AAE3D;AACA,MAAME,gBAAgB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;EAChD,IAAI;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAML,QAAQ,CACjCM,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC;MAAEC,QAAQ,EAAER,QAAQ,CAACS,GAAG,CAAE,0BAAyBN,OAAQ,GAAE;IAAE,CAAC,CAAC,CACxEO,EAAE,CAAC,IAAI,EAAER,MAAM,CAAC;IACrB,IAAIG,KAAK,EAAE;MACP,MAAMA,KAAK;IACf;IACA,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZM,OAAO,CAACN,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACO,OAAO,CAAC;IACrD,MAAMP,KAAK;EACf;AACJ,CAAC;;AAED;AACA,MAAMQ,oBAAoB,GAAG,MAAOX,MAAM,IAAK;EAC3C,IAAI;IACA,MAAM;MAAEE,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAML,QAAQ,CACjCM,IAAI,CAAC,OAAO,CAAC,CACbQ,MAAM,CAAC,UAAU,CAAC,CAClBJ,EAAE,CAAC,IAAI,EAAER,MAAM,CAAC,CAChBa,MAAM,CAAC,CAAC;IACb,IAAIV,KAAK,EAAE;MACP,MAAMA,KAAK;IACf;IACA,OAAOD,IAAI,CAACI,QAAQ,IAAI,EAAE;EAC9B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZM,OAAO,CAACN,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACO,OAAO,CAAC;IACxD,MAAMP,KAAK;EACf;AACJ,CAAC;AAED,SAASL,QAAQ,EAAEC,gBAAgB,EAAEY,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
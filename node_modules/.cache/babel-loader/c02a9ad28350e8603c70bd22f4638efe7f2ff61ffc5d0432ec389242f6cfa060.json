{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport supabase from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*').eq('id', postId).single();\n        if (error) throw error;\n        setPost(data);\n        setTitle(data.title);\n        setContent(data.content);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching post details:', error.message);\n        setError('Error fetching post details. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchPostDetails();\n  }, [postId]);\n  const handleEditPost = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').update({\n        title,\n        content\n      }).eq('id', postId);\n      if (error) throw error;\n      console.log('Post updated successfully:', data);\n      // You can redirect the user to the post details page after editing\n    } catch (error) {\n      console.error('Error editing post:', error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditPost,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPost, \"0S+9fDz8TxkXYYgCoTqNEBe3nSI=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","jsxDEV","_jsxDEV","EditPost","_s","postId","post","setPost","title","setTitle","content","setContent","loading","setLoading","error","setError","fetchPostDetails","data","from","select","eq","single","console","message","handleEditPost","update","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport supabase from '../client';\r\n\r\nconst EditPost = () => {\r\n    const { postId } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPostDetails = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('Posts')\r\n                    .select('*')\r\n                    .eq('id', postId)\r\n                    .single();\r\n                if (error) throw error;\r\n                setPost(data);\r\n                setTitle(data.title);\r\n                setContent(data.content);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching post details:', error.message);\r\n                setError('Error fetching post details. Please try again later.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPostDetails();\r\n    }, [postId]);\r\n\r\n    const handleEditPost = async () => {\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from('Posts')\r\n                .update({ title, content })\r\n                .eq('id', postId);\r\n            if (error) throw error;\r\n            console.log('Post updated successfully:', data);\r\n            // You can redirect the user to the post details page after editing\r\n        } catch (error) {\r\n            console.error('Error editing post:', error.message);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Edit Post</h2>\r\n            <label>\r\n                Title:\r\n                <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            </label>\r\n            <label>\r\n                Content:\r\n                <textarea value={content} onChange={(e) => setContent(e.target.value)} />\r\n            </label>\r\n            <button onClick={handleEditPost}>Save Changes</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
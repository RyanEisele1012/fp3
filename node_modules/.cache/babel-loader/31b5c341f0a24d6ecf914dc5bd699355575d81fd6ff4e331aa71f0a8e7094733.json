{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../client'; // Assuming you have your Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = ({\n  post\n}) => {\n  _s();\n  const [comment, setComment] = useState('');\n  const handleCommentSubmit = async () => {\n    try {\n      // Update the 'comments' column in the 'Posts' table with the new comment\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').update({\n        comments: [...post.comments, comment]\n      }) // Assuming 'comments' is an array in your 'Posts' table\n      .eq('id', post.id);\n      if (error) {\n        throw error;\n      }\n      // Optionally, you can update the local state with the updated post data\n      // setPost(data);\n      setComment(''); // Clear the comment input field after submission\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", post.created_at]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        placeholder: \"Add your comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCommentSubmit,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetails, \"vhAvzpEN661Y5K0yhbG0Td/NMg4=\");\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","PostDetails","post","_s","comment","setComment","handleCommentSubmit","data","error","from","update","comments","eq","id","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","username","upvotes","imageUrl","src","alt","created_at","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from '../client'; // Assuming you have your Supabase client instance set up\r\n\r\nconst PostDetails = ({ post }) => {\r\n    const [comment, setComment] = useState('');\r\n\r\n    const handleCommentSubmit = async () => {\r\n        try {\r\n            // Update the 'comments' column in the 'Posts' table with the new comment\r\n            const { data, error } = await supabase\r\n                .from('Posts')\r\n                .update({ comments: [...post.comments, comment] }) // Assuming 'comments' is an array in your 'Posts' table\r\n                .eq('id', post.id);\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            // Optionally, you can update the local state with the updated post data\r\n            // setPost(data);\r\n            setComment(''); // Clear the comment input field after submission\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Post Details</h2>\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>User Name: {post.username}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p>Created At: {post.created_at}</p>\r\n            <div>\r\n                <textarea\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    placeholder=\"Add your comment...\"\r\n                ></textarea>\r\n                <button onClick={handleCommentSubmit}>Submit Comment</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
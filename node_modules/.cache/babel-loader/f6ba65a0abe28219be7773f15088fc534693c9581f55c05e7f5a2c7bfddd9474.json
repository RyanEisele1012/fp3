{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostDetails.css'; // Import the CSS file\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        // Fetch comments associated with the current post\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('comments').eq('id', post.id).single();\n        if (error) throw error;\n        setComments(data.comments || []);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n        setError('Error fetching comments. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [post]);\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    setSubmitting(true);\n    try {\n      // Update the comments field in the database to add the new comment\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').update({\n        comments: [...comments, newComment] // Assuming 'comments' is a text field containing the comments\n      }).eq('id', post.id);\n      if (error) throw error;\n\n      // Update the local state with the new comment\n      setComments([...comments, newComment]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", post.created_at]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"User: Anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write your comment here...\",\n        disabled: submitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !newComment.trim() || submitting,\n        children: submitting ? 'Submitting...' : 'Submit Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetails, \"Yb2G/tCEWsg7h1/B6cvLF4kA+CA=\");\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","PostDetails","post","_s","comments","setComments","loading","setLoading","newComment","setNewComment","submitting","setSubmitting","error","setError","fetchComments","data","from","select","eq","id","single","console","message","handleSubmitComment","e","preventDefault","trim","update","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","username","upvotes","imageUrl","src","alt","created_at","length","map","comment","index","onSubmit","value","onChange","target","placeholder","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostDetails.css'; // Import the CSS file\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst PostDetails = ({ post }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchComments = async () => {\r\n            try {\r\n                // Fetch comments associated with the current post\r\n                const { data, error } = await supabase\r\n                    .from('Posts')\r\n                    .select('comments')\r\n                    .eq('id', post.id)\r\n                    .single();\r\n                if (error) throw error;\r\n                setComments(data.comments || []);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n                setError('Error fetching comments. Please try again later.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, [post]);\r\n\r\n    const handleSubmitComment = async (e) => {\r\n        e.preventDefault();\r\n        if (!newComment.trim()) return;\r\n\r\n        setSubmitting(true);\r\n\r\n        try {\r\n            // Update the comments field in the database to add the new comment\r\n            const { data, error } = await supabase\r\n                .from('Posts')\r\n                .update({\r\n                    comments: [...comments, newComment] // Assuming 'comments' is a text field containing the comments\r\n                })\r\n                .eq('id', post.id);\r\n            if (error) throw error;\r\n\r\n            // Update the local state with the new comment\r\n            setComments([...comments, newComment]);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error.message);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading comments...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Post Details</h2>\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>User Name: {post.username}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p>Created At: {post.created_at}</p>\r\n            <h3>Comments</h3>\r\n            {comments.length > 0 ? (\r\n                <ul>\r\n                    {comments.map((comment, index) => (\r\n                        <li key={index}>\r\n                            <p>User: Anonymous</p> {/* Assuming comments are not associated with users */}\r\n                            <p>Content: {comment}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No comments available.</p>\r\n            )}\r\n            <form onSubmit={handleSubmitComment}>\r\n                <textarea\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Write your comment here...\"\r\n                    disabled={submitting}\r\n                />\r\n                <button type=\"submit\" disabled={!newComment.trim() || submitting}>\r\n                    {submitting ? 'Submitting...' : 'Submit Comment'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
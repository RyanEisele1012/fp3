{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch comments data from Supabase when the component mounts\n    const fetchComments = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*').eq('postId', post.id);\n        if (error) {\n          throw error;\n        }\n        setComments(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n      }\n    };\n    fetchComments();\n  }, [post.id]); // Update comments when post.id changes\n\n  const handleCommentChange = event => {\n    setNewComment(event.target.value);\n  };\n  const handleAddComment = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('PostComments').insert([{\n        postId: post.id,\n        comment: newComment\n      }]);\n      if (error) {\n        throw error;\n      }\n      setComments([...comments, data[0]]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this); // Display loading state while fetching data\n  }\n\n  // Function to format the created_at date in a more readable format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", formatDate(post.created_at)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a comment...\",\n        value: newComment,\n        onChange: handleCommentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetails, \"1obi0pxhbaYEags6kawTWbRgxBE=\");\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","PostDetails","post","_s","comments","setComments","newComment","setNewComment","loading","setLoading","fetchComments","data","error","from","select","eq","id","console","message","handleCommentChange","event","target","value","handleAddComment","insert","postId","comment","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","date","Date","toLocaleString","title","content","username","upvotes","imageUrl","src","alt","created_at","map","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst PostDetails = ({ post }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Fetch comments data from Supabase when the component mounts\r\n        const fetchComments = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('Posts')\r\n                    .select('*')\r\n                    .eq('postId', post.id);\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                setComments(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, [post.id]); // Update comments when post.id changes\r\n\r\n    const handleCommentChange = (event) => {\r\n        setNewComment(event.target.value);\r\n    };\r\n\r\n    const handleAddComment = async () => {\r\n        try {\r\n            const { data, error } = await supabase.from('PostComments').insert([\r\n                { postId: post.id, comment: newComment }\r\n            ]);\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            setComments([...comments, data[0]]);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error.message);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Display loading state while fetching data\r\n    }\r\n\r\n    // Function to format the created_at date in a more readable format\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Post Details</h2>\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>User Name: {post.username}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p>Created At: {formatDate(post.created_at)}</p>\r\n\r\n            <div>\r\n                <h3>Comments</h3>\r\n                <ul>\r\n                    {comments.map((comment) => (\r\n                        <li key={comment.id}>\r\n                            <p>{comment.comment}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <textarea\r\n                    placeholder=\"Add a comment...\"\r\n                    value={newComment}\r\n                    onChange={handleCommentChange}\r\n                />\r\n                <button onClick={handleAddComment}>Add Comment</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\HomeFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\n\nimport './HomeFeed.css'; // Import the CSS file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatDate = timestamp => {\n  const date = new Date(timestamp);\n  const options = {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  };\n  return date.toLocaleDateString('en-US', options);\n};\n\nconst HomeFeed = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch posts data from Supabase when the component mounts\n    const fetchPosts = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*');\n\n        if (error) {\n          throw error;\n        }\n\n        setPosts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error.message);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleUpvote = async postId => {\n    try {\n      // Fetch the current upvotes count for the post\n      const {\n        data: postData,\n        error: fetchError\n      } = await supabase.from('Posts').select('upvotes').eq('id', postId).single();\n\n      if (fetchError) {\n        throw fetchError;\n      }\n\n      const currentUpvotes = postData.upvotes || 0;\n      const updatedUpvotes = currentUpvotes + 1; // Update the upvotes count for the post in the database\n\n      const {\n        error: updateError\n      } = await supabase.from('Posts').update({\n        upvotes: updatedUpvotes\n      }).eq('id', postId);\n\n      if (updateError) {\n        throw updateError;\n      } // Update the local state with the updated post data\n\n\n      const updatedPosts = posts.map(post => post.id === postId ? { ...post,\n        upvotes: updatedUpvotes\n      } : post);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error updating upvote count:', error.message);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this); // Display loading state while fetching data\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"UserID: \", post.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upvotes: \", post.upvotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.imageUrl,\n          alt: \"Post Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"created-at\",\n          children: [\"Created At: \", formatDate(post.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpvote(post.id),\n          children: \"Upvote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeFeed, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n\n_c = HomeFeed;\nexport default HomeFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useState","useEffect","supabase","formatDate","timestamp","date","Date","options","month","day","year","hour","minute","hour12","toLocaleDateString","HomeFeed","posts","setPosts","loading","setLoading","fetchPosts","data","error","from","select","console","message","handleUpvote","postId","postData","fetchError","eq","single","currentUpvotes","upvotes","updatedUpvotes","updateError","update","updatedPosts","map","post","id","title","content","userId","imageUrl","created_at"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/HomeFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\nimport './HomeFeed.css'; // Import the CSS file\r\n\r\nconst formatDate = (timestamp) => {\r\n  const date = new Date(timestamp);\r\n  const options = {\r\n    month: 'long',\r\n    day: 'numeric',\r\n    year: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: true,\r\n  };\r\n  return date.toLocaleDateString('en-US', options);\r\n};\r\n\r\nconst HomeFeed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch posts data from Supabase when the component mounts\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const { data, error } = await supabase.from('Posts').select('*');\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        setPosts(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleUpvote = async (postId) => {\r\n    try {\r\n      // Fetch the current upvotes count for the post\r\n      const { data: postData, error: fetchError } = await supabase\r\n        .from('Posts')\r\n        .select('upvotes')\r\n        .eq('id', postId)\r\n        .single();\r\n      if (fetchError) {\r\n        throw fetchError;\r\n      }\r\n\r\n      const currentUpvotes = postData.upvotes || 0;\r\n      const updatedUpvotes = currentUpvotes + 1;\r\n\r\n      // Update the upvotes count for the post in the database\r\n      const { error: updateError } = await supabase\r\n        .from('Posts')\r\n        .update({ upvotes: updatedUpvotes })\r\n        .eq('id', postId);\r\n      if (updateError) {\r\n        throw updateError;\r\n      }\r\n\r\n      // Update the local state with the updated post data\r\n      const updatedPosts = posts.map((post) =>\r\n        post.id === postId ? { ...post, upvotes: updatedUpvotes } : post\r\n      );\r\n      setPosts(updatedPosts);\r\n    } catch (error) {\r\n      console.error('Error updating upvote count:', error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Display loading state while fetching data\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Home Feed</h2>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post.id} className=\"post\">\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>UserID: {post.userId}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p className=\"created-at\">Created At: {formatDate(post.created_at)}</p>\r\n            <button onClick={() => handleUpvote(post.id)}>Upvote</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeFeed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostDetails.css'; // Import the CSS file\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    // Fetch comments data from Supabase when the component mounts\n    const fetchComments = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Comments').select('*').eq('postId', post.id); // Assuming postId is the column name in Comments table\n        if (error) {\n          throw error;\n        }\n        setComments(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n      }\n    };\n    fetchComments();\n  }, [post.id]); // Update comments when post id changes\n\n  const handleSubmitComment = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Comments').insert([{\n        postId: post.id,\n        comment: newComment,\n        username: 'Anonymous'\n      }]); // Assuming the username is hard-coded here\n      if (error) {\n        throw error;\n      }\n      setComments([...comments, ...data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this); // Display loading state while fetching comments\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", formatDate(post.created_at)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", comment.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Comment: \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Add a comment...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitComment,\n      children: \"Submit Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetails, \"RQatY2UJ8IpY9n7E3l1DEbfi6DE=\");\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","PostDetails","post","_s","comments","setComments","loading","setLoading","newComment","setNewComment","fetchComments","data","error","from","select","eq","id","console","message","handleSubmitComment","insert","postId","comment","username","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","upvotes","imageUrl","src","alt","formatDate","created_at","map","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostDetails.css'; // Import the CSS file\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst PostDetails = ({ post }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch comments data from Supabase when the component mounts\r\n        const fetchComments = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('Comments')\r\n                    .select('*')\r\n                    .eq('postId', post.id); // Assuming postId is the column name in Comments table\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                setComments(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, [post.id]); // Update comments when post id changes\r\n\r\n    const handleSubmitComment = async () => {\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from('Comments')\r\n                .insert([{ postId: post.id, comment: newComment, username: 'Anonymous' }]); // Assuming the username is hard-coded here\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            setComments([...comments, ...data]);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error.message);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading comments...</div>; // Display loading state while fetching comments\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Post Details</h2>\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>User Name: {post.username}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p>Created At: {formatDate(post.created_at)}</p>\r\n\r\n            <h3>Comments</h3>\r\n            <ul>\r\n                {comments.map((comment) => (\r\n                    <li key={comment.id}>\r\n                        <p>User: {comment.username}</p>\r\n                        <p>Comment: {comment.comment}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <textarea\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n                placeholder=\"Add a comment...\"\r\n            ></textarea>\r\n            <button onClick={handleSubmitComment}>Submit Comment</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostDetails.css'; // Import the CSS file\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const postId = post.id; // Assuming post.id is the ID of the current post\n        const {\n          data,\n          error\n        } = await supabase.from('Comments') // Assuming the comments table is named 'Comments'\n        .select('*').eq('postId', postId); // Assuming postId is the foreign key in the Comments table\n        if (error) {\n          throw error;\n        }\n        setComments(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n      }\n    };\n    fetchComments();\n  }, [post]); // Update comments when the post prop changes\n\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this); // Display loading state while fetching comments\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", formatDate(post.created_at)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", comment.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Comment: \", comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted At: \", formatDate(comment.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetails, \"3oWDV6rKZStWsu0iQ6DCTXD4gew=\");\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","PostDetails","post","_s","comments","setComments","loading","setLoading","fetchComments","postId","id","data","error","from","select","eq","console","message","formatDate","dateString","date","Date","toLocaleString","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","username","upvotes","imageUrl","src","alt","created_at","map","comment","text","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostDetails.css'; // Import the CSS file\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst PostDetails = ({ post }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchComments = async () => {\r\n            try {\r\n                const postId = post.id; // Assuming post.id is the ID of the current post\r\n                const { data, error } = await supabase\r\n                    .from('Comments') // Assuming the comments table is named 'Comments'\r\n                    .select('*')\r\n                    .eq('postId', postId); // Assuming postId is the foreign key in the Comments table\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                setComments(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, [post]); // Update comments when the post prop changes\r\n\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString();\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading comments...</div>; // Display loading state while fetching comments\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Post Details</h2>\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>User Name: {post.username}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p>Created At: {formatDate(post.created_at)}</p>\r\n            <h3>Comments</h3>\r\n            <ul>\r\n                {comments.map((comment) => (\r\n                    <li key={comment.id}>\r\n                        <p>User: {comment.username}</p>\r\n                        <p>Comment: {comment.text}</p>\r\n                        <p>Posted At: {formatDate(comment.created_at)}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport supabase from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*').eq('id', postId).single();\n        if (error) {\n          throw error;\n        }\n        setPost(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching post:', error.message);\n      }\n    };\n    fetchPost();\n  }, [postId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"UserID: \", post.userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", new Date(post.created_at).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetails, \"p57fiaa+N5VlWMJrNhjcwhF622o=\", false, function () {\n  return [useParams];\n});\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","jsxDEV","_jsxDEV","PostDetails","_s","postId","post","setPost","loading","setLoading","fetchPost","data","error","from","select","eq","single","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","userId","upvotes","imageUrl","src","alt","Date","created_at","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport supabase from '../client';\r\n\r\nconst PostDetails = () => {\r\n  const { postId } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from('Posts')\r\n          .select('*')\r\n          .eq('id', postId)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        setPost(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching post:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchPost();\r\n  }, [postId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!post) {\r\n    return <div>Post not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Post Details</h2>\r\n      <p>Title: {post.title}</p>\r\n      <p>Content: {post.content}</p>\r\n      <p>UserID: {post.userId}</p>\r\n      <p>Upvotes: {post.upvotes}</p>\r\n      {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n      <p>Created At: {new Date(post.created_at).toLocaleString()}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
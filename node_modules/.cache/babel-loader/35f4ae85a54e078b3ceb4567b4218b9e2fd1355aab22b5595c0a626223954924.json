{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport './HomeFeed.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeFeed = () => {\n  _s();\n  const history = useHistory();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch posts data from Supabase when the component mounts\n    const fetchPosts = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*');\n        if (error) {\n          throw error;\n        }\n        setPosts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error.message);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleSubmit = async postData => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').insert([postData]);\n      if (error) {\n        throw error;\n      }\n      setPosts([...posts, data[0]]);\n    } catch (error) {\n      console.error('Error inserting new post:', error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this); // Display loading state while fetching data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"UserID: \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upvotes: \", post.upvotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.imageUrl,\n          alt: \"Post Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"created-at\",\n          children: [\"Created At: \", post.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(HomeFeed, \"6fk/0ilq0bbiJYxIpExpVfUKxMQ=\", false, function () {\n  return [useHistory];\n});\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","supabase","jsxDEV","_jsxDEV","HomeFeed","_s","history","posts","setPosts","loading","setLoading","fetchPosts","data","error","from","select","console","message","handleSubmit","postData","insert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","className","title","content","username","upvotes","imageUrl","src","alt","created_at","id","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/HomeFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'; // Import useHistory from react-router-dom\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\nimport './HomeFeed.css'; // Import the CSS file\r\n\r\nconst HomeFeed = () => {\r\n    const history = useHistory();\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Fetch posts data from Supabase when the component mounts\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const { data, error } = await supabase.from('Posts').select('*');\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                setPosts(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const handleSubmit = async (postData) => {\r\n        try {\r\n            const { data, error } = await supabase.from('Posts').insert([postData]);\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            setPosts([...posts, data[0]]);\r\n        } catch (error) {\r\n            console.error('Error inserting new post:', error.message);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Display loading state while fetching data\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Home Feed</h2>\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post.id} className=\"post\">\r\n                        <p>Title: {post.title}</p>\r\n                        <p>Content: {post.content}</p>\r\n                        <p>UserID: {post.username}</p>\r\n                        <p>Upvotes: {post.upvotes}</p>\r\n                        {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n                        <p className=\"created-at\">Created At: {post.created_at}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {/* <CreatePostForm onSubmit={handleSubmit} /> Include CreatePostForm component */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './HomeFeed.css'; // Import the CSS file\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeFeed = ({\n  onPostSelected\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch posts data from Supabase when the component mounts\n    const fetchPosts = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*');\n        if (error) {\n          throw error;\n        }\n        setPosts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error.message);\n      }\n    };\n    fetchPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this); // Display loading state while fetching data\n  }\n\n  // Function to handle clicking on a post\n  const handlePostClick = postId => {\n    onPostSelected(postId);\n  };\n\n  // Function to handle adding upvotes to a post\n  const handleAddUpvote = async postId => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').update({\n        upvotes: supabase.raw('upvotes + 1')\n      }).eq('id', postId);\n      if (error) {\n        throw error;\n      }\n      // Update the posts state with the updated post data\n      const updatedPosts = posts.map(post => post.id === postId ? {\n        ...post,\n        upvotes: data[0].upvotes\n      } : post);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error adding upvote:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Name: \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upvotes: \", post.upvotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.imageUrl,\n          alt: \"Post Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"created-at\",\n          children: [\"Created At: \", post.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddUpvote(post.id),\n          children: \"Add Upvote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePostClick(post.id),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(HomeFeed, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","HomeFeed","onPostSelected","_s","posts","setPosts","loading","setLoading","fetchPosts","data","error","from","select","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","handlePostClick","postId","handleAddUpvote","update","upvotes","raw","eq","updatedPosts","map","post","id","className","title","content","username","imageUrl","src","alt","created_at","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/HomeFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './HomeFeed.css'; // Import the CSS file\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst HomeFeed = ({ onPostSelected }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Fetch posts data from Supabase when the component mounts\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const { data, error } = await supabase.from('Posts').select('*');\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                setPosts(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Display loading state while fetching data\r\n    }\r\n\r\n    // Function to handle clicking on a post\r\n    const handlePostClick = (postId) => {\r\n        onPostSelected(postId);\r\n    };\r\n\r\n    // Function to handle adding upvotes to a post\r\n    const handleAddUpvote = async (postId) => {\r\n        try {\r\n            const { data, error } = await supabase.from('Posts').update({ upvotes: supabase.raw('upvotes + 1') }).eq('id', postId);\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            // Update the posts state with the updated post data\r\n            const updatedPosts = posts.map(post => post.id === postId ? { ...post, upvotes: data[0].upvotes } : post);\r\n            setPosts(updatedPosts);\r\n        } catch (error) {\r\n            console.error('Error adding upvote:', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Home Feed</h2>\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post.id} className=\"post\">\r\n                        <p>Title: {post.title}</p>\r\n                        <p>Content: {post.content}</p>\r\n                        <p>User Name: {post.username}</p>\r\n                        <p>Upvotes: {post.upvotes}</p>\r\n                        {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n                        <p className=\"created-at\">Created At: {post.created_at}</p>\r\n                        <button onClick={() => handleAddUpvote(post.id)}>Add Upvote</button>\r\n                        <button onClick={() => handlePostClick(post.id)}>View Details</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
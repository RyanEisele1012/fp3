{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport './HomeFeed.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = timestamp => {\n  const date = new Date(timestamp);\n  const options = {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  };\n  return date.toLocaleDateString('en-US', options);\n};\nconst HomeFeed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch posts data from Supabase when the component mounts\n    const fetchPosts = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*');\n        if (error) {\n          throw error;\n        }\n        setPosts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error.message);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleUpvote = async postId => {\n    try {\n      // Fetch the current upvotes count for the post\n      const {\n        data: postData,\n        error: fetchError\n      } = await supabase.from('Posts').select('upvotes').eq('id', postId).single();\n      if (fetchError) {\n        throw fetchError;\n      }\n      const currentUpvotes = postData.upvotes || 0;\n      const updatedUpvotes = currentUpvotes + 1;\n\n      // Update the upvotes count for the post in the database\n      const {\n        error: updateError\n      } = await supabase.from('Posts').update({\n        upvotes: updatedUpvotes\n      }).eq('id', postId);\n      if (updateError) {\n        throw updateError;\n      }\n\n      // Update the local state with the updated post data\n      const updatedPosts = posts.map(post => post.id === postId ? {\n        ...post,\n        upvotes: updatedUpvotes\n      } : post);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error updating upvote count:', error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this); // Display loading state while fetching data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"UserID: \", post.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upvotes: \", post.upvotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.imageUrl,\n          alt: \"Post Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"created-at\",\n          children: [\"Created At: \", formatDate(post.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpvote(post.id),\n          children: \"Upvote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeFeed, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","formatDate","timestamp","date","Date","options","month","day","year","hour","minute","hour12","toLocaleDateString","HomeFeed","_s","posts","setPosts","loading","setLoading","fetchPosts","data","error","from","select","console","message","handleUpvote","postId","postData","fetchError","eq","single","currentUpvotes","upvotes","updatedUpvotes","updateError","update","updatedPosts","map","post","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","content","userId","imageUrl","src","alt","created_at","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/HomeFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\nimport './HomeFeed.css'; // Import the CSS file\r\n\r\nconst formatDate = (timestamp) => {\r\n  const date = new Date(timestamp);\r\n  const options = {\r\n    month: 'long',\r\n    day: 'numeric',\r\n    year: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: true,\r\n  };\r\n  return date.toLocaleDateString('en-US', options);\r\n};\r\n\r\nconst HomeFeed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch posts data from Supabase when the component mounts\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const { data, error } = await supabase.from('Posts').select('*');\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        setPosts(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleUpvote = async (postId) => {\r\n    try {\r\n      // Fetch the current upvotes count for the post\r\n      const { data: postData, error: fetchError } = await supabase\r\n        .from('Posts')\r\n        .select('upvotes')\r\n        .eq('id', postId)\r\n        .single();\r\n      if (fetchError) {\r\n        throw fetchError;\r\n      }\r\n\r\n      const currentUpvotes = postData.upvotes || 0;\r\n      const updatedUpvotes = currentUpvotes + 1;\r\n\r\n      // Update the upvotes count for the post in the database\r\n      const { error: updateError } = await supabase\r\n        .from('Posts')\r\n        .update({ upvotes: updatedUpvotes })\r\n        .eq('id', postId);\r\n      if (updateError) {\r\n        throw updateError;\r\n      }\r\n\r\n      // Update the local state with the updated post data\r\n      const updatedPosts = posts.map((post) =>\r\n        post.id === postId ? { ...post, upvotes: updatedUpvotes } : post\r\n      );\r\n      setPosts(updatedPosts);\r\n    } catch (error) {\r\n      console.error('Error updating upvote count:', error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Display loading state while fetching data\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Home Feed</h2>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post.id} className=\"post\">\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>UserID: {post.userId}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p className=\"created-at\">Created At: {formatDate(post.created_at)}</p>\r\n            <button onClick={() => handleUpvote(post.id)}>Upvote</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
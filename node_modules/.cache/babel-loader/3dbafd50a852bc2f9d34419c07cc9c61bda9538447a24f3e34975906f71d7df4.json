{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './HomeFeed.css'; // Import the CSS file\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeFeed = ({\n  onPostSelected\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch posts data from Supabase when the component mounts\n    const fetchPosts = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Posts').select('*');\n        if (error) {\n          throw error;\n        }\n        setPosts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error.message);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  // Function to handle clicking on a post\n  const handlePostClick = post => {\n    onPostSelected(post);\n  };\n\n  // Function to handle adding upvotes to a post\n  const handleAddUpvote = async (postId, currentUpvotes) => {\n    try {\n      const {\n        data: updatedPost,\n        error\n      } = await supabase.from('Posts').update({\n        upvotes: currentUpvotes + 1\n      }).eq('id', postId).single();\n      if (error) {\n        throw error;\n      }\n      const updatedPosts = posts.map(p => p.id === postId ? updatedPost : p);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error adding upvote:', error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this); // Display loading state while fetching data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.filter(post => post && post.id) // Filter out posts with null or undefined id\n      .map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post\",\n        onClick: () => handlePostClick(post),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", post && post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", post && post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"UserID: \", post && post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upvotes: \", post && post.upvotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), post && post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.imageUrl,\n          alt: \"Post Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"created-at\",\n          children: [\"Created At: \", post && post.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            handleAddUpvote(post.id, post.upvotes);\n          },\n          children: \"Add Upvote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(HomeFeed, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","HomeFeed","onPostSelected","_s","posts","setPosts","loading","setLoading","fetchPosts","data","error","from","select","console","message","handlePostClick","post","handleAddUpvote","postId","currentUpvotes","updatedPost","update","upvotes","eq","single","updatedPosts","map","p","id","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","className","onClick","title","content","username","imageUrl","src","alt","created_at","e","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/HomeFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './HomeFeed.css'; // Import the CSS file\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst HomeFeed = ({ onPostSelected }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Fetch posts data from Supabase when the component mounts\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const { data, error } = await supabase.from('Posts').select('*');\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                setPosts(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    // Function to handle clicking on a post\r\n    const handlePostClick = (post) => {\r\n        onPostSelected(post);\r\n    };\r\n\r\n    // Function to handle adding upvotes to a post\r\n    const handleAddUpvote = async (postId, currentUpvotes) => {\r\n        try {\r\n            const { data: updatedPost, error } = await supabase\r\n                .from('Posts')\r\n                .update({ upvotes: currentUpvotes + 1 })\r\n                .eq('id', postId)\r\n                .single();\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            const updatedPosts = posts.map(p => p.id === postId ? updatedPost : p);\r\n            setPosts(updatedPosts);\r\n        } catch (error) {\r\n            console.error('Error adding upvote:', error.message);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Display loading state while fetching data\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Home Feed</h2>\r\n            <ul>\r\n                {posts\r\n                    .filter(post => post && post.id) // Filter out posts with null or undefined id\r\n                    .map((post) => (\r\n                        <li key={post.id} className=\"post\" onClick={() => handlePostClick(post)}>\r\n                            <p>Title: {post && post.title}</p>\r\n                            <p>Content: {post && post.content}</p>\r\n                            <p>UserID: {post && post.username}</p>\r\n                            <p>Upvotes: {post && post.upvotes}</p>\r\n                            {post && post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n                            <p className=\"created-at\">Created At: {post && post.created_at}</p>\r\n                            <button onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleAddUpvote(post.id, post.upvotes);\r\n                            }}>Add Upvote</button>\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryegu\\\\Documents\\\\COP4808\\\\src\\\\pages\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostDetails.css'; // Import the CSS file\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetails = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch comments data from Supabase when the component mounts\n    const fetchComments = async () => {\n      try {\n        const {\n          data: commentsData,\n          error\n        } = await supabase.from('Posts').select('*, comments(*)').eq('id', post.id).single();\n        if (error) {\n          throw error;\n        }\n        // Extract comments from the post data\n        const postComments = commentsData.comments || [];\n        setComments(postComments);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching comments:', error.message);\n      }\n    };\n    fetchComments();\n  }, [post.id]); // Update comments when post id changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this); // Display loading state while fetching data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Content: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created At: \", post.created_at]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", comment.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetails, \"3oWDV6rKZStWsu0iQ6DCTXD4gew=\");\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","PostDetails","post","_s","comments","setComments","loading","setLoading","fetchComments","data","commentsData","error","from","select","eq","id","single","postComments","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","username","upvotes","imageUrl","src","alt","created_at","map","comment","_c","$RefreshReg$"],"sources":["C:/Users/ryegu/Documents/COP4808/src/pages/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostDetails.css'; // Import the CSS file\r\nimport supabase from '../client'; // Assuming you have a Supabase client instance set up\r\n\r\nconst PostDetails = ({ post }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Fetch comments data from Supabase when the component mounts\r\n        const fetchComments = async () => {\r\n            try {\r\n                const { data: commentsData, error } = await supabase\r\n                    .from('Posts')\r\n                    .select('*, comments(*)')\r\n                    .eq('id', post.id)\r\n                    .single();\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                // Extract comments from the post data\r\n                const postComments = commentsData.comments || [];\r\n                setComments(postComments);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, [post.id]); // Update comments when post id changes\r\n\r\n    if (loading) {\r\n        return <div>Loading comments...</div>; // Display loading state while fetching data\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Post Details</h2>\r\n            <p>Title: {post.title}</p>\r\n            <p>Content: {post.content}</p>\r\n            <p>User Name: {post.username}</p>\r\n            <p>Upvotes: {post.upvotes}</p>\r\n            {post.imageUrl && <img src={post.imageUrl} alt=\"Post Image\" />}\r\n            <p>Created At: {post.created_at}</p>\r\n            <h3>Comments</h3>\r\n            <ul>\r\n                {comments.map((comment) => (\r\n                    <li key={comment.id}>\r\n                        <p>User: {comment.username}</p>\r\n                        <p>Content: {comment.content}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}